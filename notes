For JNDI:
	Add dependencies:
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		providedRuntime 'javax.servlet:javax.servlet-api:3.1.0'
		implementation 'org.springframework.boot:spring-boot-actuator'
		
	Add this to properties:
		#Use this for JNDI
		spring.datasource.jndi-name=jdbc/jndiName
	
	Added resource ref to web.xml:
		<resource-ref>
			<res-ref-name>jdbc/springdb</res-ref-name>
			<res-type>javax.sql.DataSource</res-type>
			<res-auth>Container</res-auth>
			<res-sharing-scope>Shareable</res-sharing-scope>
		</resource-ref>
	
	Added config in Config Class:

Try for Eureka:
	- To disable bean scanning, create new empty beans.xml in WEB-INF. If beans.xml does not work, try bean.xml. Content in repo.
	- To disable Weld's automatic bean scanning for an entire deployment, add jboss-all.xml file as in the repo
	- After above steps, if exception like this occurs, javax.enterprise.inject.UnsatisfiedResolutionException: Unable to resolve a bean for 'javax.persistence.EntityManager', use below config
		public class CdiConfig {
			@Produces
			@Dependent
			@PersistenceUnit
			private EntityManagerFactory entityManagerFactory;

			@Produces
			@Dependent
			public EntityManager createEntityManager(EntityManagerFactory emf) {
				return emf.createEntityManager();
			}

			public void close(@Disposes EntityManager entityManager) {
				entityManager.close();
			}
		}
		
		OR
		
		public class CdiConfig {
			@Produces
			@Dependent
			@PersistenceContext
			private EntityManager entityManager;
		}
	
